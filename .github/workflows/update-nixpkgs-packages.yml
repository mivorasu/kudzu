name: update-nixpkgs-packages

on:
  workflow_dispatch:
    inputs:
      packages:
        description: '["vscodium"]'
        required: false
        default: ""
  # schedule:
  #   - cron: 0 23 * * *

jobs:
  update-nixpkgs-packages:
    strategy:
      fail-fast: false
      matrix:
        attribute: ${{ fromJSON( (github.event_name == 'workflow_dispatch' && github.event.inputs.packages != '') && github.event.inputs.packages || '["vscodium"]' ) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - uses: ./.github/actions/install-nix
      - uses: cachix/cachix-action@master
        with:
          name: ${{ secrets.CACHIX_NAME }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - run: rm -f ~/.config/nix/nix.conf
      - uses: actions/checkout@main
        id: checkout_nixpkgs
        continue-on-error: true
        with:
          repository: ${{ github.actor }}/nixpkgs
          ref: ${{ matrix.attribute }}
          fetch-depth: "10"
          path: nixpkgs
          token: ${{ secrets.TOKEN }}
      - if: steps.checkout_nixpkgs.outcome == 'failure'
        uses: actions/checkout@main
        with:
          repository: ${{ github.actor }}/nixpkgs
          fetch-depth: "10"
          path: nixpkgs
          token: ${{ secrets.TOKEN }}
      - working-directory: nixpkgs
        run: |
          nix-env -i nixpkgs-review nix-update -f '<nixpkgs>'
          git checkout -B master
          git checkout -B ${{ matrix.attribute }}
          nix-update --build --test --review --commit --format --use-update-script --update-script-args "--argstr skip-prompt true --argstr commit true" ${{ matrix.attribute }}
          ! git diff --quiet master... && git push
